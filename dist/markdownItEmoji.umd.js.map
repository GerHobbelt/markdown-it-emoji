{"version":3,"file":"markdownItEmoji.umd.js","sources":["../lib/data/shortcuts.js","../lib/render.js","../lib/replace.js","../lib/normalize_opts.js","../bare.js","../index.js"],"sourcesContent":["// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n\nexport default {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n","\nexport default function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n}\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n\nexport default function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  let arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    let token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      let emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    let i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n}\n","// Convert input options to more useable format\n// and compile search regexp\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nexport default function normalize_opts(options) {\n  let emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  let keys = Object.keys(emojies);\n  let names;\n\n  // If no definitions are given, return empty regex to avoid replacements with 'undefined'.\n  if (keys.length === 0) {\n    names = '^$';\n  } else {\n    // Compile regexp\n    names = keys\n      .map(function (name) { return ':' + name + ':'; })\n      .concat(Object.keys(shortcuts))\n      .sort()\n      .reverse()\n      .map(function (name) { return quoteRE(name); })\n      .join('|');\n  }\n  let scanRE = RegExp(names);\n  let replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n}\n","\nimport emoji_html from './lib/render.js';\nimport emoji_replace from './lib/replace.js';\nimport normalize_opts from './lib/normalize_opts.js';\n\n\nexport default function emoji_plugin(md, options) {\n  let defaults = {\n    defs: {},\n    shortcuts: {},\n    enabled: []\n  };\n\n  let opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n}\n","\nimport path from 'path';\nimport fs from 'fs';\nimport { fileURLToPath } from 'url';\n// see https://nodejs.org/docs/latest-v13.x/api/esm.html#esm_no_require_exports_module_exports_filename_dirname\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\nconst emojies_defs = JSON.parse(fs.readFileSync(path.normalize(path.join(__dirname, './lib/data/full.json')), 'utf8'));\n\nimport emojies_shortcuts from './lib/data/shortcuts.js';\nimport bare_emoji_plugin from './bare.js';\n\n\nexport default function emoji_plugin(md, options) {\n  let defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  let opts = md.utils.assign({}, defaults, options || {});\n\n  bare_emoji_plugin(md, opts);\n}\n"],"names":["angry","blush","broken_heart","confused","cry","frowning","heart","imp","innocent","joy","kissing","laughing","neutral_face","open_mouth","rage","smile","smiley","smiling_imp","sob","stuck_out_tongue","sunglasses","sweat","sweat_smile","unamused","wink","emoji_html","tokens","idx","content","create_rule","md","emojies","shortcuts","scanRE","replaceRE","arrayReplaceAt","utils","ucm","lib","ucmicro","ZPCc","RegExp","Z","source","P","Cc","join","splitTextToken","text","level","Token","token","last_pos","nodes","replace","match","offset","src","emoji_name","hasOwnProperty","test","length","slice","push","markup","emoji_replace","state","i","j","l","blockTokens","autolinkLevel","type","children","info","nesting","quoteRE","str","normalize_opts","options","defs","enabled","Object","keys","reduce","acc","key","indexOf","Array","isArray","forEach","alias","names","map","name","concat","sort","reverse","emoji_plugin","defaults","opts","assign","renderer","rules","emoji","core","ruler","__filename","fileURLToPath","import","__dirname","path","dirname","emojies_defs","JSON","parse","fs","readFileSync","normalize","emojies_shortcuts","bare_emoji_plugin"],"mappings":"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"}